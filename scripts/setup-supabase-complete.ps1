# Script completo para configurar Supabase CLI e deploy da Edge Function
# Execute: .\scripts\setup-supabase-complete.ps1

Write-Host "üöÄ Configura√ß√£o Completa do Supabase CLI" -ForegroundColor Green
Write-Host "=========================================" -ForegroundColor Green

# Verificar se estamos no diret√≥rio correto
if (-not (Test-Path "supabase/config.toml")) {
    Write-Host "‚ùå Erro: Execute este script na raiz do projeto" -ForegroundColor Red
    exit 1
}

# 1. Verificar se Supabase CLI est√° instalado
Write-Host "üîç Verificando Supabase CLI..." -ForegroundColor Blue
try {
    $version = supabase --version
    Write-Host "‚úÖ Supabase CLI encontrado: $version" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Supabase CLI n√£o encontrado. Instalando..." -ForegroundColor Yellow
    Write-Host "üì¶ Instalando via npm..." -ForegroundColor Blue
    
    try {
        npm install -g supabase
        Write-Host "‚úÖ Supabase CLI instalado com sucesso!" -ForegroundColor Green
    } catch {
        Write-Host "‚ùå Erro na instala√ß√£o. Instale manualmente:" -ForegroundColor Red
        Write-Host "npm install -g supabase" -ForegroundColor Yellow
        exit 1
    }
}

# 2. Login no Supabase
Write-Host ""
Write-Host "üîê Fazendo login no Supabase..." -ForegroundColor Blue
Write-Host "üìù Abra o navegador e fa√ßa login quando solicitado" -ForegroundColor Yellow

try {
    supabase login
    Write-Host "‚úÖ Login realizado com sucesso!" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Erro no login. Execute manualmente: supabase login" -ForegroundColor Red
    exit 1
}

# 3. Link do projeto
Write-Host ""
Write-Host "üîó Linkando projeto..." -ForegroundColor Blue
Write-Host "üìã Projeto detectado: vaogzhwzucijiyvyglls" -ForegroundColor Cyan

try {
    supabase link --project-ref vaogzhwzucijiyvyglls
    Write-Host "‚úÖ Projeto linkado com sucesso!" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Erro no link. Execute manualmente:" -ForegroundColor Red
    Write-Host "supabase link --project-ref vaogzhwzucijiyvyglls" -ForegroundColor Yellow
    exit 1
}

# 4. Configurar secrets
Write-Host ""
Write-Host "üîë Configurando secrets..." -ForegroundColor Blue

# Verificar se SERVICE_ROLE_KEY est√° definida
if (-not $env:SUPABASE_SERVICE_ROLE_KEY) {
    Write-Host "‚ö†Ô∏è  SERVICE_ROLE_KEY n√£o definida" -ForegroundColor Yellow
    Write-Host "üìù Configure com:" -ForegroundColor Blue
    Write-Host '$env:SUPABASE_SERVICE_ROLE_KEY="sua-service-role-key"' -ForegroundColor Gray
    Write-Host ""
    Write-Host "üí° Encontre a chave em: Supabase Dashboard > Settings > API > service_role" -ForegroundColor Blue
    Write-Host ""
    $continue = Read-Host "Deseja continuar sem configurar secrets? (y/N)"
    if ($continue -notmatch "^[Yy]$") {
        exit 1
    }
} else {
    Write-Host "‚úÖ Configurando secrets..." -ForegroundColor Green
    supabase secrets set SUPABASE_URL="https://vaogzhwzucijiyvyglls.supabase.co"
    supabase secrets set SUPABASE_SERVICE_ROLE_KEY="$env:SUPABASE_SERVICE_ROLE_KEY"
    Write-Host "‚úÖ Secrets configurados!" -ForegroundColor Green
}

# 5. Deploy da Edge Function
Write-Host ""
Write-Host "üöÄ Fazendo deploy da Edge Function..." -ForegroundColor Blue

try {
    supabase functions deploy pdf-proposal-pro
    Write-Host "‚úÖ Deploy realizado com sucesso!" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Erro no deploy. Execute manualmente:" -ForegroundColor Red
    Write-Host "supabase functions deploy pdf-proposal-pro" -ForegroundColor Yellow
    exit 1
}

# 6. Teste da fun√ß√£o
Write-Host ""
Write-Host "üß™ Testando a fun√ß√£o..." -ForegroundColor Blue

if (-not $env:SUPABASE_ANON_KEY) {
    Write-Host "‚ö†Ô∏è  ANON_KEY n√£o definida para teste" -ForegroundColor Yellow
    Write-Host "üìù Configure com:" -ForegroundColor Blue
    Write-Host '$env:SUPABASE_ANON_KEY="sua-anon-key"' -ForegroundColor Gray
    Write-Host ""
    Write-Host "üí° Encontre a chave em: Supabase Dashboard > Settings > API > anon" -ForegroundColor Blue
} else {
    Write-Host "‚úÖ Executando teste..." -ForegroundColor Green
    try {
        node scripts/test-pdf-pro-function.js
        Write-Host "‚úÖ Teste executado!" -ForegroundColor Green
    } catch {
        Write-Host "‚ö†Ô∏è  Erro no teste, mas a fun√ß√£o foi deployada" -ForegroundColor Yellow
    }
}

# 7. Resumo final
Write-Host ""
Write-Host "üéâ Configura√ß√£o Conclu√≠da!" -ForegroundColor Green
Write-Host "=========================" -ForegroundColor Green
Write-Host ""
Write-Host "‚úÖ Supabase CLI instalado e configurado" -ForegroundColor Green
Write-Host "‚úÖ Projeto linkado" -ForegroundColor Green
Write-Host "‚úÖ Edge Function deployada" -ForegroundColor Green
Write-Host ""
Write-Host "üéØ Agora teste no frontend:" -ForegroundColor Blue
Write-Host "1. Acesse uma proposta" -ForegroundColor Gray
Write-Host "2. Clique em 'PDF Profissional'" -ForegroundColor Gray
Write-Host "3. Deve aparecer 'PDF profissional gerado com sucesso!'" -ForegroundColor Gray
Write-Host ""
Write-Host "üìä Se ainda aparecer erro CORS, verifique:" -ForegroundColor Yellow
Write-Host "- Secrets configurados corretamente" -ForegroundColor Gray
Write-Host "- Fun√ß√£o deployada sem erros" -ForegroundColor Gray
Write-Host "- Projeto linkado corretamente" -ForegroundColor Gray
