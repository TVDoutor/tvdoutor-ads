-- ============================================
-- APLICAR CORRE√á√ÉO AGORA - Execute no SQL Editor do Supabase
-- ============================================

-- 1. DESABILITAR RLS imediatamente
ALTER TABLE public.profiles DISABLE ROW LEVEL SECURITY;
ALTER TABLE public.user_roles DISABLE ROW LEVEL SECURITY;

-- 2. Verificar se foi desabilitado
SELECT 'Status RLS ap√≥s desabilita√ß√£o:' as info;
SELECT 
    schemaname, 
    tablename, 
    rowsecurity as rls_enabled,
    CASE 
        WHEN rowsecurity THEN 'üî¥ RLS AINDA ATIVO - PROBLEMA!'
        ELSE '‚úÖ RLS DESABILITADO - CORRIGIDO!'
    END as status
FROM pg_tables 
WHERE tablename IN ('profiles', 'user_roles')
ORDER BY tablename;

-- 3. Testar inser√ß√£o imediatamente
DO $$
DECLARE
    test_user_id uuid := gen_random_uuid();
BEGIN
    RAISE NOTICE 'üß™ Testando inser√ß√£o ap√≥s desabilitar RLS...';
    
    -- Testar inser√ß√£o em profiles
    INSERT INTO public.profiles (id, email, full_name, created_at, updated_at)
    VALUES (test_user_id, 'teste@example.com', 'Usu√°rio Teste', now(), now());
    
    RAISE NOTICE '‚úÖ INSERT em profiles FUNCIONOU!';
    
    -- Testar inser√ß√£o em user_roles
    INSERT INTO public.user_roles (user_id, role, created_at)
    VALUES (test_user_id, 'user', now());
    
    RAISE NOTICE '‚úÖ INSERT em user_roles FUNCIONOU!';
    
    -- Limpar registros de teste
    DELETE FROM public.user_roles WHERE user_id = test_user_id;
    DELETE FROM public.profiles WHERE id = test_user_id;
    
    RAISE NOTICE 'üéâ TESTE CONCLU√çDO COM SUCESSO!';
    RAISE NOTICE '‚úÖ Agora teste o signup na aplica√ß√£o!';
    
EXCEPTION WHEN OTHERS THEN
    RAISE NOTICE '‚ùå ERRO: %', SQLERRM;
    RAISE NOTICE '‚ùå Ainda h√° problemas com as tabelas!';
END $$;

-- 4. Verificar trigger
SELECT 'Verifica√ß√£o do trigger:' as info;
SELECT 
    trigger_name,
    CASE 
        WHEN trigger_name = 'on_auth_user_created' THEN '‚úÖ Trigger existe'
        ELSE '‚ùå Trigger n√£o encontrado'
    END as status
FROM information_schema.triggers 
WHERE trigger_name = 'on_auth_user_created';

-- 5. Verificar fun√ß√£o
SELECT 'Verifica√ß√£o da fun√ß√£o:' as info;
SELECT 
    proname as function_name,
    CASE 
        WHEN proname = 'handle_new_user' THEN '‚úÖ Fun√ß√£o existe'
        ELSE '‚ùå Fun√ß√£o n√£o encontrada'
    END as status
FROM pg_proc 
WHERE proname = 'handle_new_user';

-- 6. Confirmar
SELECT 'üöÄ CORRE√á√ÉO APLICADA! Teste o signup agora na aplica√ß√£o.' as status;
