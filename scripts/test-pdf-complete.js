#!/usr/bin/env node

/**
 * Script para testar a gera√ß√£o de PDF completa
 * Testa tanto a fun√ß√£o SQL quanto a Edge Function
 */

import { createClient } from '@supabase/supabase-js';

// Use as vari√°veis de ambiente diretamente
const supabaseUrl = process.env.VITE_SUPABASE_URL || 'https://vaogzhwzucijiyvyglls.supabase.co';
const supabaseAnonKey = process.env.VITE_SUPABASE_ANON_KEY || 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InZhb2d6aHd6dWNpaml5dnlnbGxzIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MzU2MjQwNzEsImV4cCI6MjA1MTIwMDA3MX0.placeholder';

if (!supabaseUrl || !supabaseAnonKey) {
  console.error('‚ùå Vari√°veis de ambiente n√£o encontradas:');
  console.error('VITE_SUPABASE_URL:', supabaseUrl ? '‚úÖ' : '‚ùå');
  console.error('VITE_SUPABASE_ANON_KEY:', supabaseAnonKey ? '‚úÖ' : '‚ùå');
  process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseAnonKey);

async function testCompletePDFGeneration() {
  console.log('üß™ Testando gera√ß√£o completa de PDF...');
  
  try {
    // 1. Buscar uma proposta existente
    console.log('üìã Buscando propostas dispon√≠veis...');
    const { data: proposals, error: proposalsError } = await supabase
      .from('proposals')
      .select('id, customer_name')
      .limit(1);
    
    if (proposalsError) {
      console.error('‚ùå Erro ao buscar propostas:', proposalsError.message);
      return false;
    }
    
    if (!proposals || proposals.length === 0) {
      console.log('‚ö†Ô∏è Nenhuma proposta encontrada para teste');
      return false;
    }
    
    const proposalId = proposals[0].id;
    console.log(`‚úÖ Proposta encontrada: ID ${proposalId} - ${proposals[0].customer_name}`);
    
    // 2. Testar a fun√ß√£o SQL
    console.log('üîç Testando fun√ß√£o SQL get_proposal_details...');
    const { data: sqlData, error: sqlError } = await supabase
      .rpc('get_proposal_details', { p_proposal_id: proposalId });
    
    if (sqlError) {
      console.error('‚ùå Erro na fun√ß√£o SQL:', sqlError.message);
      return false;
    }
    
    console.log('‚úÖ Fun√ß√£o SQL funcionando!');
    console.log('üìä Dados retornados:', {
      proposal_id: sqlData?.proposal?.id,
      client_name: sqlData?.proposal?.client_name,
      screens_count: sqlData?.proposal?.screens_count,
      cities_count: sqlData?.inventory_summary_by_city?.length || 0
    });
    
    // 3. Testar a Edge Function
    console.log('üöÄ Testando Edge Function generate-pdf-proposal...');
    const { data, error } = await supabase.functions.invoke('generate-pdf-proposal', {
      body: { proposalId }
    });
    
    if (error) {
      console.error('‚ùå Erro na Edge Function:', error.message);
      return false;
    }
    
    if (data && data.ok) {
      console.log('‚úÖ Edge Function funcionando!');
      console.log('üìÑ PDF gerado:', data.pdf_url ? '‚úÖ' : '‚ùå');
      console.log('üìÅ Caminho:', data.pdf_path);
      console.log('üîó URL:', data.pdf_url);
      
      // 4. Testar se a URL √© acess√≠vel
      if (data.pdf_url) {
        console.log('üîç Testando acesso ao PDF...');
        try {
          const response = await fetch(data.pdf_url);
          if (response.ok) {
            console.log('‚úÖ PDF acess√≠vel via URL!');
          } else {
            console.log('‚ö†Ô∏è PDF gerado mas URL n√£o acess√≠vel:', response.status);
          }
        } catch (fetchError) {
          console.log('‚ö†Ô∏è Erro ao acessar URL do PDF:', fetchError.message);
        }
      }
      
      return true;
    } else {
      console.error('‚ùå Edge Function retornou erro:', data?.error);
      return false;
    }
    
  } catch (error) {
    console.error('‚ùå Erro no teste completo:', error.message);
    return false;
  }
}

async function main() {
  console.log('üöÄ Iniciando teste completo de gera√ß√£o de PDF...\n');
  
  const success = await testCompletePDFGeneration();
  
  if (success) {
    console.log('\nüéâ TESTE COMPLETO PASSOU!');
    console.log('‚úÖ Fun√ß√£o SQL funcionando');
    console.log('‚úÖ Edge Function funcionando');
    console.log('‚úÖ CORS configurado corretamente');
    console.log('‚úÖ PDF sendo gerado e salvo');
    console.log('\nüéØ A gera√ß√£o de PDF deve funcionar no frontend agora!');
  } else {
    console.log('\n‚ùå TESTE FALHOU!');
    console.log('Verifique os logs acima para identificar o problema.');
    process.exit(1);
  }
}

main().catch(console.error);
